local is_lock_input = false

local function btn_simple_pressed(self, node)
	msg.post('main:/gui#popup', "popup", {
		owner_url = msg.url()
	})

	is_lock_input = true
	
end

local function btn_music_pressed(self, node)
	self.flag_music = not self.flag_music

	if self.flag_music then
		gui.play_flipbook(self.node_icon_btn_music, "icon_music0001")
		gui.set_text(self.node_text_btn_music, "Music on")
	else
		gui.play_flipbook(self.node_icon_btn_music, "icon_music0002")
		gui.set_text(self.node_text_btn_music, "Music off")
	end

end

function init(self)
	msg.post("@render:", "clear_color", { color = vmath.vector4(5 / 256, 144 / 256, 199 / 256, 1) })
	
	msg.post(".", "acquire_input_focus")


	self.node_text_btn_music = gui.get_node("text_btn_music")
	self.node_icon_btn_music = gui.get_node("icon_btn_music")
	
	gui.set_text(self.node_text_btn_music, "Music on")

	self.flag_music = true
	
end

function final(self)
	msg.post(".", "release_input_focus")
	
end

function update(self, dt)

end

function on_message(self, message_id, message, sender)
	if message_id == hash("unlock_input") then
		is_lock_input = false
		msg.post(sender, "deactivate")
	end
	
end

local node_state = {}

local function button_click(self, action, node_name, callback)
	-- node_name = node_name.."/button"
	local node = gui.get_node(node_name)

	if gui.pick_node(node, action.x, action.y) and gui.is_enabled(node) then
		if action.pressed then
			node_state[node_name] = 'pressed'
			gui.set_scale(node, vmath.vector3(1, 1, 1))
			gui.animate(node, gui.PROP_SCALE, vmath.vector3(0.9, 0.9, 0.9), gui.EASING_LINEAR, 0.1, 0)
		elseif action.released then
			node_state[node_name] = 'released'
			gui.animate(node, gui.PROP_SCALE, vmath.vector3(1, 1, 1), gui.EASING_LINEAR, 0.1)
			callback(self)
		end
	elseif node_state[node_name] == 'pressed' then
		node_state[node_name] = nil
		gui.animate(node, gui.PROP_SCALE, vmath.vector3(1, 1, 1), gui.EASING_LINEAR, 0.1)
	end
end

local buttons = {
	btn_simple 		= btn_simple_pressed,
	btn_music		= btn_music_pressed
}

function on_input(self, action_id, action)
	if (not is_lock_input) then
		if action_id == hash('touch') then
			for button, callback in pairs(buttons) do
				button_click(self, action, button, callback)
			end
		end
	end
end